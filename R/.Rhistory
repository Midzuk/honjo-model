"shiryokanto", 0,
"sports", 0,
"super", 0,
"toshokan",0
)
# for文でよい
1 : length(facility_user) %>%
map(function(i) { # i : 施設
total_user[i,]$user <<-
1 : length(population_2015) %>%
map_dbl(function(j) { # j : メッシュ
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency
}) %>%
sum()
}) %>%
sum() + total_user[i,]$user
})
# 副作用あり (2度回さないこと)
for (i in 1 : length(distance)) {
for (j in 1 : length(distance[[i]])) {
num <- distance[[i]][[j]]$num + 1
facility_user[[i]][num,]$user <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency
}) %>%
sum() + facility_user[[i]][num,]$user
facility_user[[i]][num,]$distance <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
(population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency) * distance[[i]][[j]]$distance
}) %>%
sum() + facility_user[[i]][num,]$distance
}
}
# シェア算出
for (i in 1 : length(facility_user)) {
for (num in nrow(facility_user[[i]])) {
facility_user[[i]][num,]$share <- facility_user[[i]][num,]$user / total_user[i,]$user
}
}
View(facility_user)
# シェア算出
for (i in 1 : length(facility_user)) {
for (num in 1 : nrow(facility_user[[i]])) {
facility_user[[i]][num,]$share <- facility_user[[i]][num,]$user / total_user[i,]$user
}
}
View(facility_user)
unnest(facility_user)
unsplit(facility_user)
unsplit(facility_user)
facility_user %>% as_tibble()
facility_user %>% tibble()
unnest(facility_user)
facility_user %>% unsplit(.$type)
facility_user %>% unsplit()
facility_user %>% unsplit(.$type)
unsplit(facility_user, facility_user$type)
View(facility_user)
facility_user$type
facility_user[1]
facility_user[[1]]
names(facility_user)
facility_user %>% unsplit(names(.))
unsplit(facility_user, names(facility_user))
use_frequency1 <- use_frequency <- read_csv("use_frequency.csv") %>%
select("age",
"kominkan",
"shiminkatsudo",
"bunka",
"sports",
"sangyoshinko",
"toshokan",
"shiryokanto",
"jido",
"byoin",
"super") %>%
gather(key = "type", value = "use_frequency", -age)
facility_user1 <- facility_lonlat %>%
select(type, num) %>%
mutate(user = 0, distance = 0, share = 0) %>%
split(.$type)
View(facility_user1)
facility_user1 <- facility_lonlat %>%
select(type, num) %>%
mutate(user = 0, distance = 0, share = 0)
facility_usr1$type
facility_user1$type
facility_user %>% unsplit(facility_user1$type)
flatten(facility_user)
facility_user %>% unite()
facility_user[1]
facility_user[[1]]
add_column(facility_user[[1]],facility_user[[2]])
add(facility_user[[1]],facility_user[[2]])
facility_user[[1]] + facility_user[[2]]
facility_user[[2]]
add_row(facility_user[[1]], facility_user[[2]])
union(facility_user[[1]],facility_user[[2]] )
facility_user[[1]]
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map(~ facility_user[[.]]) %>%
reduce(union())
1 : length(facility_user) %>%
map(~ facility_user[[.]])
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map_dfr(~ facility_user[[.]])
View(facility_user1)
View(facility_user_out)
View(public_facility)
View(public_facility)
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map_dfr(~ facility_user[[.]]) %>%
left_join(public_facility)
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map_dfr(~ facility_user[[.]]) %>%
left_join(public_facility, by = c("type", "num"))
View(medical_facility)
View(medical_facility)
View(commercial_facility)
View(commercial_facility)
View(commercial_facility)
View(commercial_facility)
View(medical_facility_lonlat)
View(medical_facility)
View(medical_facility_lonlat)
View(medical_facility_lonlat)
View(medical_facility)
# 商業施設
commercial_facility <- read_csv("commercial_facility.csv") %>%
mutate(use_rate = as.numeric(sub("%", "", use_rate)) / 100) %>%
select(-name)
View(commercial_facility)
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map_dfr(~ facility_user[[.]]) %>%
left_join(public_facility, by = c("type", "num")) %>%
left_join(medical_facility, by = c("type", "num")) %>%
left_join(commercial_facility, by = c("type", "num"))
View(facility_user_out)
write_csv(facility_user_out)
write_csv(facility_user_out, "facility_user_out.csv")
View(mesh)
View(population_2015)
population_2015[[1]]
View(use_frequency)
total_user[1,]
# 施設利用頻度
use_frequency <- read_csv("use_frequency.csv") %>%
select("age",
"kominkan",
"shiminkatsudo",
"bunka",
"sports",
"sangyoshinko",
"toshokan",
"shiryokanto",
"jido",
"byoin",
"super") %>%
gather(key = "type", value = "use_frequency", -age) %>%
split(.$type)
View(use_frequency)
# 施設利用頻度
use_frequency <- read_csv("old/use_frequency.csv") %>%
select("age",
"kominkan",
"shiminkatsudo",
"bunka",
"sports",
"sangyoshinko",
"toshokan",
"shiryokanto",
"jido",
"byoin",
"super") %>%
gather(key = "type", value = "use_frequency", -age) %>%
split(.$type)
facility_type <- names(use_frequency)
View(use_frequency)
# test => OK
total_user <- tribble(~type, ~user,
"bunka", 0,
"byoin", 0,
"jido", 0,
"kominkan", 0,
"sangyoshinko", 0,
"shiminkatsudo", 0,
"shiryokanto", 0,
"sports", 0,
"super", 0,
"toshokan",0
)
# for文でよい
1 : length(facility_user) %>%
map(function(i) { # i : 施設
total_user[i,]$user <<-
1 : length(population_2015) %>%
map_dbl(function(j) { # j : メッシュ
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency
}) %>%
sum()
}) %>%
sum() + total_user[i,]$user
})
View(total_user)
use_frequency$bunka
as.numeric(1)
as.numeric(c(1,2))
View(facility_user)
View(facility_lonlat)
facility_user[[1]]
facility_user[[2]]
facility_user[[2]][1,]
View(distance)
View(distance)
population_2015[[1]]
population_2015[[1]] %>% nrow()
for (j in 1 : length(distance[[1]])) {
num <- distance[[1]][[j]]$num + 1
print(num)
a <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[1]][k,]$use_frequency
})
print(a)
}
for (j in 1 : length(distance[[1]])) {
num <- distance[[1]][[j]]$num + 1
print(num)
a <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[1]][k,]$use_frequency
})
}
for (j in 1 : length(distance[[1]])) {
num <- distance[[1]][[j]]$num + 1
a <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[1]][k,]$use_frequency
}) %>% sum()
print(paste(num, ",", a))
}
for (j in 1 : length(distance[[1]])) {
num <- distance[[1]][[j]]$num + 1
a <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[1]][k,]$use_frequency
}) %>% sum()
# print(paste(num, ",", a))
if (a > 1000) {
print(paste(num, ",", j))
}
}
distance[[1]][[359]]
View(mesh)
mesh_codes[[359]]
mesh[[359]]
mesh[359,]
View(population_2015)
population_2015[[359]]
population_2015[[360]]
mesh[359,]
mesh
mesh[1]
mesh %>% nrow()
write_csv(mesh, "mesh.csv")
library(tidyverse)
library(magrittr)
# 2015年時点メッシュ人口およびメッシュの緯度経度
population_2015 <- read_csv("old/population_2015.csv")
mesh <- read_csv("old/mesh_new.csv") %>%
inner_join(population_2015, by = "mesh_code") %>%
select("mesh_code", "longitude", "latitude")
population_2015 %<>%
gather(key = age, value = population, -mesh_code) %>%
split(.$mesh_code)
mesh_codes <- mesh$mesh_code
# 施設利用頻度
use_frequency <- read_csv("old/use_frequency.csv") %>%
select("age",
"kominkan",
"shiminkatsudo",
"bunka",
"sports",
"sangyoshinko",
"toshokan",
"shiryokanto",
"jido",
"byoin",
"super") %>%
gather(key = "type", value = "use_frequency", -age) %>%
split(.$type)
facility_type <- names(use_frequency)
# 公共施設
public_facility <- read_csv("old/public_facility.csv") %>%
mutate(use_rate = as.numeric(sub("%", "", use_rate)) / 100) %>%
select(-name)
public_facility_type <- public_facility %>%
nest(-type) %>%
pull(type)
# 医療施設
medical_facility <- read_csv("old/medical_facility.csv") %>%
mutate(use_rate = as.numeric(sub("%", "", use_rate)) / 100) %>%
select(-name)
# 市外または病院以外利用率
other_medical_facility_rate <- 0.576
# 商業施設
commercial_facility <- read_csv("old/commercial_facility.csv") %>%
mutate(use_rate = as.numeric(sub("%", "", use_rate)) / 100) %>%
select(-name)
# 市外利用率
other_medical_facility_rate <- 0.225
# 施設緯度経度
public_facility_lonlat <- public_facility %>%
select(type, num, longitude, latitude)
medical_facility_lonlat <- medical_facility %>%
select(type, num, longitude, latitude)
commercial_facility <- commercial_facility %>%
select(type, num, longitude, latitude)
facility_lonlat <- bind_rows(public_facility_lonlat,
medical_facility_lonlat,
commercial_facility
)
# Haskellで算出したものを利用
distance <- read_csv("old/distance.csv") %>%
split(.$type) %>%
map(~ split(.x, .$mesh_code) %>%
map(~ filter(., distance == min(distance))) %>%
map(~ .[1,])
)
#　test 重複確認 => 問題なし
distance1 <- read_csv("old/distance.csv") %>%
split(.$type) %>%
map(~ split(.x, .$mesh_code) %>%
map(~ filter(., distance == min(distance)))
)
for (i in 1 : length(distance1)) {
for (j in 1 : length(distance1[[i]])) {
if (nrow(distance1[[i]][[j]]) > 1) {
print(distance1[[i]][[j]]$type)
}
}
}
facility_user <- facility_lonlat %>%
select(type, num) %>%
mutate(user = 0, distance = 0, share = 0) %>%
split(.$type)
facility_user1 <- facility_lonlat %>%
select(type, num) %>%
mutate(user = 0, distance = 0, share = 0)
# test => OK
total_user <- tribble(~type, ~user,
"bunka", 0,
"byoin", 0,
"jido", 0,
"kominkan", 0,
"sangyoshinko", 0,
"shiminkatsudo", 0,
"shiryokanto", 0,
"sports", 0,
"super", 0,
"toshokan",0
)
# for文でよい
1 : length(facility_user) %>%
map(function(i) { # i : 施設
total_user[i,]$user <<-
1 : length(population_2015) %>%
map_dbl(function(j) { # j : メッシュ
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency
}) %>%
sum()
}) %>%
sum() + total_user[i,]$user
})
# 副作用あり (2度回さないこと)
for (i in 1 : length(distance)) {
for (j in 1 : length(distance[[i]])) {
num <- distance[[i]][[j]]$num + 1
facility_user[[i]][num,]$user <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency
}) %>%
sum() + facility_user[[i]][num,]$user
facility_user[[i]][num,]$distance <-
1 : nrow(population_2015[[j]]) %>%
map_dbl(function(k) { # k : 年齢
(population_2015[[j]][k,]$population * use_frequency[[i]][k,]$use_frequency) * distance[[i]][[j]]$distance
}) %>%
sum() + facility_user[[i]][num,]$distance
}
}
# シェア算出
for (i in 1 : length(facility_user)) {
for (num in 1 : nrow(facility_user[[i]])) {
facility_user[[i]][num,]$share <- facility_user[[i]][num,]$user / total_user[i,]$user
}
}
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map_dfr(~ facility_user[[.]]) %>%
left_join(public_facility, by = c("type", "num")) %>%
left_join(medical_facility, by = c("type", "num")) %>%
left_join(commercial_facility, by = c("type", "num"))
View(facility_user_out)
# 商業施設
commercial_facility <- read_csv("old/commercial_facility.csv") %>%
mutate(use_rate = as.numeric(sub("%", "", use_rate)) / 100) %>%
select(-name)
# 市外利用率
other_medical_facility_rate <- 0.225
# 出力用
facility_user_out <- 1 : length(facility_user) %>%
map_dfr(~ facility_user[[.]]) %>%
left_join(public_facility, by = c("type", "num")) %>%
left_join(medical_facility, by = c("type", "num")) %>%
left_join(commercial_facility, by = c("type", "num"))
write_csv(facility_user_out, "facility_user_out.csv")
# Haskellで算出したものを利用
distance1 <- read_csv("old/distance.csv") %>%
split(.$type) %>%
map(~ split(.x, .$mesh_code)
)
View(distance1)
# Haskellで算出したものを利用
distance1 <- read_csv("old/distance.csv") %>%
split(.$type) %>%
map(~ split(.x, .$mesh_code) %>%
map(~ split(.x, .$num))
)
View(distance1)
# Haskellで算出したものを利用
distance1 <- read_csv("old/distance.csv") %>%
split(.$type) %>%
map(~ split(., .$mesh_code) %>%
map(~ split(., .$num))
)
View(distance1)
distance$("bunka")
distance$c("bunka")
View(public_facility)
public_facility %<>%
split(.$type)
View(public_facility)
public_facility %<>%
split(.$type) %>%
map(., split(.$num))
# 公共施設
public_facility <- read_csv("old/public_facility.csv") %>%
mutate(use_rate = as.numeric(sub("%", "", use_rate)) / 100) %>%
select(-name)
public_facility1 <- public_facility %<>%
split(.$type) %>%
map(., split(.$num))
View(public_facility_lonlat)
public_facility1 <- public_facility %>%
split(.$type) %>%
map(., split(.$num))
public_facility1 <- public_facility %>%
split(.$type) %>%
map(~ split(., .$num))
View(facility_user)
View(facility_user_out)
View(facility_user1)
View(public_facility1)
public_facility1$bunka[1]
public_facility1$bunka[[1]]
public_facility1$bunka[[1]]$area_m2
public_facility1[1]
names(public_facility1)
public_facility1_name <- names(public_facility1)
public_facility1_name
# bunka
for (i in public_facility1_name) {
print(i)
}
x <- rnorm(10)
f <- function (x, a) {(x - a)^2}
opt <- optimize(f, interval = c(-5, 5), a = 2)
opt
public_facility1_name
i = 10
9 < i < 11
9 < i \
9 < i
1 <= i && i <= 8
i = 7
1 <= i && i <= 8
View(distance1)
distance1[[1]]
colcames(distance1[[1]])
col_cames(distance1[[1]])
ncol(distance1[[1]])
ncol(distance1[1])
length(distance1[[1]])
