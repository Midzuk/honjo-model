distance2[[i]][[j]][[k]]$huff <- s / distance2[[i]][[j]][[k]]$distance ^ x[i]
}
sum <- 0
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
sum <- sum + distance2[[i]][[j]][[k]]$huff
}
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]]$use_rate <- distance2[[i]][[j]][[k]]$huff / sum
}
# メッシュ上の利用者数合計
user <- 1 : length(population_2015_1[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015_1[[j]][[k]]$population * use_frequency1[[i]][[k]]$use_frequency
}) %>%
sum()
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]]$user <- user * distance2[[i]][[j]][[k]]$use_rate
distance2[[i]][[j]][[k]]$userXdistance <- distance2[[i]][[j]][[k]]$user * distance2[[i]][[j]][[k]]$distance
}
}
}
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA)
}
}
}
# 利用率
for (i in 1 : (length(distance1) - 1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
if (i == 2) { # 病院
s <- medical_facility1[[k]]$hospital_bed
} else if (i == 9) { # スーパー
s <- commercial_facility1[[k]]$area_m2
} else {
if (i >= 3 && i <= 8) {
i2 <- i - 1
} else if (i == 10) {
i2 <- 8
} else {
i2 <- i
}
s <- public_facility1[[i2]][[k]]$area_m2
}
distance2[[i]][[j]][[k]]$huff <- s / distance2[[i]][[j]][[k]]$distance ^ x[i]
}
sum <- 0
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
sum <- sum + distance2[[i]][[j]][[k]]$huff
}
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]]$use_rate <- distance2[[i]][[j]][[k]]$huff / sum
}
# メッシュ上の利用者数合計
user <- 1 : length(population_2015_1[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015_1[[j]][[k]]$population * use_frequency1[[i]][[k]]$use_frequency
}) %>%
sum()
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]]$user <- user * distance2[[i]][[j]][[k]]$use_rate
distance2[[i]][[j]][[k]]$userXdistance <- distance2[[i]][[j]][[k]]$user * distance2[[i]][[j]][[k]]$distance
}
}
}
View(distance2)
distance2 <- distance1
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA) %>%
select(huff, use_rate, user, userXdistance)
}
}
}
distance2 <- distance1
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA) %>%
select(huff, use_rate, user, userXdistance)
}
}
}
# 利用率
for (i in 1 : (length(distance1) - 1)) { # i: 施設種別 (図書館除く)
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
if (i == 2) { # 病院
s <- medical_facility1[[k]]$hospital_bed
} else if (i == 9) { # スーパー
s <- commercial_facility1[[k]]$area_m2
} else {
if (i >= 3 && i <= 8) {
i2 <- i - 1
} else if (i == 10) {
i2 <- 8
} else {
i2 <- i
}
s <- public_facility1[[i2]][[k]]$area_m2
}
distance2[[i]][[j]][[k]]$huff <- s / distance1[[i]][[j]][[k]]$distance ^ x[i]
}
sum <- 0
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
sum <- sum + distance2[[i]][[j]][[k]]$huff
}
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]]$use_rate <- distance2[[i]][[j]][[k]]$huff / sum
}
# メッシュ上の利用者数合計
user <- 1 : length(population_2015_1[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015_1[[j]][[k]]$population * use_frequency1[[i]][[k]]$use_frequency
}) %>%
sum()
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]]$user <- user * distance2[[i]][[j]][[k]]$use_rate
distance2[[i]][[j]][[k]]$userXdistance <- distance2[[i]][[j]][[k]]$user * distance1[[i]][[j]][[k]]$distance
}
}
}
View(distance2)
length(distance1[[10]])
# 図書館
for (j in 1 : length(distance1[[10]])) { # j: メッシュ
distance_min <- distance1[[10]][[j]][[1]]$distance
for (k in 2 : length(distance1[[10]][[j]])) { # k: 施設
if (distance1[[10]][[j]][[k]]$distance < distance_min) {
distance_min <- distance1[[10]][[j]][[k]]$distance
}
}
for (k in 1 : length(distance1[[10]][[j]])) {
if (distance1[[10]][[j]][[k]]$distance == distance_min) {
distance2[[10]][[j]][[k]]$use_rate <- 1
}
}
# メッシュ上の利用者数合計
user <- 1 : length(population_2015_1[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015_1[[j]][[k]]$population * use_frequency1[[10]][[k]]$use_frequency
}) %>%
sum()
for (k in 1 : length(distance1[[10]][[j]])) { # k: 施設
distance2[[10]][[j]][[k]]$user <- user * distance2[[10]][[j]][[k]]$use_rate
distance2[[10]][[j]][[k]]$userXdistance <- distance2[[10]][[j]][[k]]$user * distance1[[10]][[j]][[k]]$distance
}
}
View(distance2)
# 図書館
for (j in 1 : length(distance1[[10]])) { # j: メッシュ
distance_min <- distance1[[10]][[j]][[1]]$distance
for (k in 2 : length(distance1[[10]][[j]])) { # k: 施設
if (distance1[[10]][[j]][[k]]$distance < distance_min) {
distance_min <- distance1[[10]][[j]][[k]]$distance
}
}
for (k in 1 : length(distance1[[10]][[j]])) {
if (distance1[[10]][[j]][[k]]$distance == distance_min) {
distance2[[10]][[j]][[k]]$use_rate <- 1
} else {
distance2[[10]][[j]][[k]]$use_rate <- 0
}
}
# メッシュ上の利用者数合計
user <- 1 : length(population_2015_1[[j]]) %>%
map_dbl(function(k) { # k : 年齢
population_2015_1[[j]][[k]]$population * use_frequency1[[10]][[k]]$use_frequency
}) %>%
sum()
for (k in 1 : length(distance1[[10]][[j]])) { # k: 施設
distance2[[10]][[j]][[k]]$user <- user * distance2[[10]][[j]][[k]]$use_rate
distance2[[10]][[j]][[k]]$userXdistance <- distance2[[10]][[j]][[k]]$user * distance1[[10]][[j]][[k]]$distance
}
}
View(distance2)
unnest(distance2)
unnest_(distance2)
unsplit(distance2)
unlist(distance2)
a <- unlist(distance2)
a <- as_tibble(distance2)
View(a)
a %>% unnnest
a %>% unnnest()
a %>% unnest()
View(a)
a %>% gather(bunka, byoin, jido, kominkan, sangyoshinko, shiminkatsudo, shiryokanto, sports, super, toshokan, key = "type", value = "value")
a %>% unnest(value)
write_csv(distance2, "sample.csv")
tibble(x = 1:3, y = 1:3)
tibble(x = 1:3, y = c(1:3))
tibble(x = rep(1:3,3), y = 1:3)
distance2 %>% map(. %>% as_tibble())
a <- distance2 %>% map(. %>% as_tibble())
View(a)
View(a)
a
use_rate_output <- read_csv("old/distance.csv")
View(use_rate_output)
distance2[[1]]
names(distance2[[1]])
names(distance2)
names(distance2)[1]
names(distance2)[2]
use_rate_output$'0'
use_rate_output['5439104543']
use_rate_output$$'5439104543'
use_rate_output[mesh_code == '5439104543']
use_rate_output[.$mesh_code == '5439104543']
use_rate_output[use_rate_output$mesh_code == '5439104543']
use_rate_output[use_rate_output$mesh_code == "5439104543"]
use_rate_output%>%map(~ .$distance)
use_rate_output %>% group_by()
use_rate_output %>% group_by(mesh_code)
use_rate_output %>% nest
use_rate_output %>% nest(-mesh_code)
use_rate_output %>% nest(-type)
use_rate_output %>% nest(-type) %>% map(. %>% nest(-mesh_code))
use_rate_output %>% nest(-type, -mesh_code)
use_rate_output %>% nest(-type, -mesh_code, -num)
use_rate_output %>% nest(-type, -mesh_code)
use_rate_output %>% nest(-type, -mesh_code) %>% nest(-type)
a <- use_rate_output %>% nest(-type, -mesh_code) %>% nest(-type)
View(a)
a
a[[1]]
a[1]
a[,1]
a[1,]$data
a <- use_rate_output %>% arrange(mesh_code, type, num) %>% nest(-type, -mesh_code) %>% nest(-type)
a
a[,1]$data
a[1,]$data
a[1,]$data[1,]$data
(a[1,]$data)[1,]$data
(a[1,]$data)[1,]
(a[1,]$data)
(a[1,]$data)[1]
a[1,]$data[[1]]
use_rate_output <- read_csv("old/distance.csv") %>%
arrange(mesh_code, type, num) %>%
nest(-type, -mesh_code) %>%
nest(-type)
use_rate_output[1,]
use_rate_output[1,]$data
use_rate_output[1,]$data[[1]]
use_rate_output[1,]$data[[1]][1,]
use_rate_output[1,]$data[[1]][1]
use_rate_output[1,]$data[[1]][1,]
use_rate_output[1,]$data[[1]][1,]$data[[1]]
use_rate_output[1,]$data[[1]][1,]$data[[1]][1,]
use_rate_output <- read_csv("old/distance.csv") %>%
select(-distance) %>%
mutate(use_rate = NA, user = NA, userXdistance = NA) %>%
arrange(mesh_code, type, num) %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$use_rate = distance2[[i]][[j]][[k]]$use_rate
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$user = distance2[[i]][[j]][[k]]$user
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$userXdistance = distance2[[i]][[j]][[k]]$userXdistance
}
}
}
View(use_rate_output)
use_rate_output %<>%
unnest()
use_rate_output
View(use_rate_output)
use_rate_output <- read_csv("old/distance.csv") %>%
select(-distance) %>%
mutate(use_rate = NA, user = NA, userXdistance = NA) %>%
arrange(mesh_code, type, num) %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$use_rate <- distance2[[i]][[j]][[k]]$use_rate
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$user <- distance2[[i]][[j]][[k]]$user
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$userXdistance <- distance2[[i]][[j]][[k]]$userXdistance
}
}
}
use_rate_output1 <- use_rate_output %>%
unnest()
View(use_rate_output1)
use_rate_output1 <- use_rate_output %>%
unnest(type, mesh_code)
use_rate_output1 <- use_rate_output %>%
unnest(-type)
use_rate_output1 <- use_rate_output %>%
unnest(type)
View(use_rate_output1)
use_rate_output1 <- use_rate_output %>%
unnest(data)
use_rate_output1 <- use_rate_output %>%
unnest(data) %>%
unnest(data)
use_rate_output1 %>% nest(-type, -mesh_code) %>% nest(-type)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
View(use_rate_disp)
use_rate_disp[1,]
use_rate_disp[1,]$data[[1]]
nrow(use_rate_disp)
use_rate_disp[1,]$data[[1]]
use_rate_disp[1,]$data[[1]]$mesh_code
use_rate_disp[1,]$data[[1]]
use_rate_disp[1,]$data[[1]][1,]
use_rate_disp[1,]$data[[1]][1,]
use_rate_disp[1,]$data[[1]][1,]$data[[1]]
use_rate_disp[1,]$data[[1]][1,]$data[[1]]$use_rate %>% var()
use_rate_disp[1,]$data[[1]][1,]$data[[1]]
use_rate_disp[1,]$data[[1]]
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]] %>%
mutate(disp = NA)
use_rate_disp[i,]$data[[1]]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% var()
}
}
use_rate_disp <- use_rate_disp %>%
unnest(data) %>%
unnest(data)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]] %>%
mutate(disp = NA)
use_rate_disp[i,]$data[[1]]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% var()
}
}
use_rate_disp <- use_rate_disp %>%
unnest(data)
use_rate_output1 <- use_rate_output %>%
unnest(data) %>%
unnest(data)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
use_rate_output <- read_csv("old/distance.csv") %>%
select(-distance) %>%
mutate(use_rate = NA, user = NA, userXdistance = NA) %>%
arrange(mesh_code, type, num) %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$use_rate <- distance2[[i]][[j]][[k]]$use_rate
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$user <- distance2[[i]][[j]][[k]]$user
use_rate_output[i,]$data[[1]][j,]$data[[1]][k,]$userXdistance <- distance2[[i]][[j]][[k]]$userXdistance
}
}
}
use_rate_output1 <- use_rate_output %>%
unnest(data) %>%
unnest(data)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]] %>%
mutate(disp = NA)
use_rate_disp[i,]$data[[1]]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% var()
}
}
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
View(use_rate_disp1)
use_rate_disp[1,]$data[[1]]
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
use_rate_disp[i,]$data[[1]] %>%
mutate(disp = NA)
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]][j,]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% sum()
}
}
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
use_rate_disp[i,]$data[[1]]
View(use_rate_disp1)
use_rate_disp1 <- use_rate_disp %>%
unnest(data) %>%
unnest(data)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
use_rate_disp[i,]$data[[1]] %>%
mutate(disp = NA)
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]][j,]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% sum()
}
}
use_rate_disp[1,]$data[[1]] %>%
mutate(disp = NA)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
use_rate_disp[i,]$data[[1]] %<>%
mutate(disp = NA)
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]][j,]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% sum()
}
}
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
use_rate_disp[i,]$data[[1]]
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
use_rate_disp[i,]$data[[1]] %<>%
mutate(disp = data[[1]]$use_rate %>% var())
# for (j in 1 : length(distance1[[i]])) { # j: メッシュ
#   use_rate_disp[i,]$data[[1]][j,]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% var()
# }
}
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
use_rate_disp <- use_rate_output1 %>%
nest(-type, -mesh_code) %>%
nest(-type)
for (i in 1 : length(distance1)) { # i: 施設種別
use_rate_disp[i,]$data[[1]] %<>%
mutate(disp = NA)
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
use_rate_disp[i,]$data[[1]][j,]$disp <- use_rate_disp[i,]$data[[1]][j,]$data[[1]]$use_rate %>% var()
}
}
use_rate_disp1 <- use_rate_disp %>%
unnest(data)
var(0.5493613, 0.4506387)
var(c(0.5493613, 0.4506387))
use_rate_output1[4,]$use_rate
var(c(use_rate_output1[3,]$use_rate, use_rate_output1[4,]$use_rate))
use_rate_disp1 <- use_rate_disp %>%
unnest(data) %>%
select(-data)
write_csv(use_rate_disp1, "use_rate_disp.csv")
distance2 <- distance1
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA) %>%
select(huff, use_rate, user, userXdistance,distance)
}
}
}
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA) %>%
select(huff, use_rate, user, userXdistance,distance)
}
}
}
distance1
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA) %>%
select(huff, use_rate, user, userXdistance, distance)
}
}
}
distance2 <- distance1
# 利用率
for (i in 1 : length(distance1)) { # i: 施設種別
for (j in 1 : length(distance1[[i]])) { # j: メッシュ
for (k in 1 : length(distance1[[i]][[j]])) { # k: 施設
distance2[[i]][[j]][[k]] %<>%
mutate(huff = NA, use_rate = NA, user = NA, userXdistance = NA) %>%
select(huff, use_rate, user, userXdistance, distance)
}
}
}
